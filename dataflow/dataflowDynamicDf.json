{
	"name": "dataflowDynamicDf",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          COLOR_Tool_Name = Color_Tool,",
				"          Color_Chip_Name,",
				"          DateTime,",
				"          Color_Chip_Source,",
				"          Scheme,",
				"          Instrument,",
				"          Geometry,",
				"          {400},",
				"          {410},",
				"          {420},",
				"          {430},",
				"          {440},",
				"          {450},",
				"          {460},",
				"          {470},",
				"          {480},",
				"          {490},",
				"          {500},",
				"          {510},",
				"          {520},",
				"          {530},",
				"          {540},",
				"          {550},",
				"          {560},",
				"          {570},",
				"          {580},",
				"          {590},",
				"          {600},",
				"          {610},",
				"          {620},",
				"          {630},",
				"          {640},",
				"          {650},",
				"          {660},",
				"          {670},",
				"          {680},",
				"          {690},",
				"          {700}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}