{
	"name": "dataflow_Color_Coordinate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TablePANEL",
						"type": "DatasetReference"
					},
					"name": "SourcePANEL"
				},
				{
					"dataset": {
						"referenceName": "ReadInCSV",
						"type": "DatasetReference"
					},
					"name": "SourceFileInCSV",
					"description": "Import data from ReadInCSV1"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "CacheColorCoordinate"
				}
			],
			"transformations": [
				{
					"name": "INFILEJOINPANEL"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PANEL_ID as integer,",
				"          NAME as string,",
				"          IS_METALLIC as integer,",
				"          CREATE_USER_ID as integer,",
				"          CREATE_DATE as timestamp,",
				"          NOTES as string,",
				"          IS_PUBLIC as integer,",
				"          ENTITY_ID as integer,",
				"          IS_INACTIVE as integer,",
				"          AUDIT_SEARCH_INDEX_DATE as timestamp,",
				"          IS_FLAGGED as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourcePANEL",
				"source(output(",
				"          {Color Tool} as string,",
				"          {Color Chip Name} as string,",
				"          DateTime as string,",
				"          {Color Chip Source} as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceFileInCSV",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"SourceFileInCSV, SourcePANEL join({Color Chip Name} == NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> INFILEJOINPANEL",
				"INFILEJOINPANEL derive(ColorString = concat(\r",
				"toString({400}),',',\r",
				"toString({410}),',',\r",
				"toString({420}),',',\r",
				"toString({430}),',',\r",
				"toString({440}),',',\r",
				"toString({450}),',',\r",
				"toString({460}),',',\r",
				"toString({470}),',',\r",
				"toString({480}),',',\r",
				"toString({490}),',',\r",
				"toString({500}),',',\r",
				"toString({510}),',',\r",
				"toString({520}),',',\r",
				"toString({530}),',',\r",
				"toString({540}),',',\r",
				"toString({550}),',',\r",
				"toString({560}),',',\r",
				"toString({570}),',',\r",
				"toString({580}),',',\r",
				"toString({590}),',',\r",
				"toString({600}),',',\r",
				"toString({610}),',',\r",
				"toString({620}),',',\r",
				"toString({630}),',',\r",
				"toString({640}),',',\r",
				"toString({650}),',',\r",
				"toString({660}),',',\r",
				"toString({670}),',',\r",
				"toString({680}),',',\r",
				"toString({690}),',',\r",
				"toString({700})\r",
				")) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> CacheColorCoordinate"
			]
		}
	}
}