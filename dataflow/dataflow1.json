{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ReadInCSV",
						"type": "DatasetReference"
					},
					"name": "SourceFileInCSV"
				},
				{
					"dataset": {
						"referenceName": "Table_COLORTOOLDB",
						"type": "DatasetReference"
					},
					"name": "SourceCOLORTOOLDB"
				},
				{
					"dataset": {
						"referenceName": "TableUserProfile",
						"type": "DatasetReference"
					},
					"name": "SourceUserprofile"
				},
				{
					"dataset": {
						"referenceName": "ReadInCSV",
						"type": "DatasetReference"
					},
					"name": "InCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Table_COLORTOOLDB",
						"type": "DatasetReference"
					},
					"name": "TableCOLORTOOLDB"
				},
				{
					"dataset": {
						"referenceName": "TablePANEL",
						"type": "DatasetReference"
					},
					"name": "TablePANEL"
				}
			],
			"transformations": [
				{
					"name": "TestConditionExist"
				},
				{
					"name": "select3"
				},
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Color_Tool as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          i400 as string,",
				"          i410 as string,",
				"          i420 as string,",
				"          i430 as string,",
				"          i440 as string,",
				"          i450 as string,",
				"          i460 as string,",
				"          i470 as string,",
				"          i480 as string,",
				"          i490 as string,",
				"          i500 as string,",
				"          i510 as string,",
				"          i520 as string,",
				"          i530 as string,",
				"          i5Color1 as string,",
				"          i550 as string,",
				"          i560 as string,",
				"          i570 as string,",
				"          i580 as string,",
				"          i590 as string,",
				"          i600 as string,",
				"          i610 as string,",
				"          i620 as string,",
				"          i630 as string,",
				"          i640 as string,",
				"          i650 as string,",
				"          i660 as string,",
				"          i670 as string,",
				"          i680 as string,",
				"          i690 as string,",
				"          i700 as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> SourceFileInCSV",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceCOLORTOOLDB",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceUserprofile",
				"source(output(",
				"          Color_Tool as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          i400 as string,",
				"          i410 as string,",
				"          i420 as string,",
				"          i430 as string,",
				"          i440 as string,",
				"          i450 as string,",
				"          i460 as string,",
				"          i470 as string,",
				"          i480 as string,",
				"          i490 as string,",
				"          i500 as string,",
				"          i510 as string,",
				"          i520 as string,",
				"          i530 as string,",
				"          i5Color1 as string,",
				"          i550 as string,",
				"          i560 as string,",
				"          i570 as string,",
				"          i580 as string,",
				"          i590 as string,",
				"          i600 as string,",
				"          i610 as string,",
				"          i620 as string,",
				"          i630 as string,",
				"          i640 as string,",
				"          i650 as string,",
				"          i660 as string,",
				"          i670 as string,",
				"          i680 as string,",
				"          i690 as string,",
				"          i700 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> InCSV",
				"select3, SourceCOLORTOOLDB exists(select3@COLOR_TOOL_NAME == SourceCOLORTOOLDB@COLOR_TOOL_NAME,",
				"     negate:true,",
				"     broadcast: 'auto')~> TestConditionExist",
				"SourceFileInCSV select(mapColumn(",
				"          COLOR_TOOL_NAME = Color_Tool,",
				"          NAME = Color_Chip_Name,",
				"          DateTime,",
				"          Color_Chip_Source,",
				"          Scheme,",
				"          Instrument,",
				"          Geometry,",
				"          i400,",
				"          i410,",
				"          i420,",
				"          i430,",
				"          i440,",
				"          i450,",
				"          i460,",
				"          i470,",
				"          i480,",
				"          i490,",
				"          i500,",
				"          i510,",
				"          i520,",
				"          i530,",
				"          i5Color1,",
				"          i550,",
				"          i560,",
				"          i570,",
				"          i580,",
				"          i590,",
				"          i600,",
				"          i610,",
				"          i620,",
				"          i630,",
				"          i640,",
				"          i650,",
				"          i660,",
				"          i670,",
				"          i680,",
				"          i690,",
				"          i700",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"SourceUserprofile lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"TestConditionExist sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COLOR_TOOL_NAME",
				"     )) ~> TableCOLORTOOLDB",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PANEL_ID as integer,",
				"          Color_Chip_Name as string,",
				"          IS_METALLIC as integer,",
				"          CREATE_USER_ID as integer,",
				"          CREATE_DATE as timestamp,",
				"          NOTES as string,",
				"          IS_PUBLIC as integer,",
				"          ENTITY_ID as integer,",
				"          IS_INACTIVE as integer,",
				"          AUDIT_SEARCH_INDEX_DATE as timestamp,",
				"          IS_FLAGGED as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> TablePANEL"
			]
		}
	}
}