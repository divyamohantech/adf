{
	"name": "dataflow_PANEL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ReadInCSV",
						"type": "DatasetReference"
					},
					"name": "SourceFileInCSV"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "SourceUserprofile"
				}
			],
			"sinks": [
				{
					"name": "SinkEntityIDValue"
				},
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "AddColumnsValueEntityID",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Color Tool} as string,",
				"          {Color Chip Name} as string,",
				"          DateTime as string,",
				"          {Color Chip Source} as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as double,",
				"          {410} as double,",
				"          {420} as double,",
				"          {430} as double,",
				"          {440} as double,",
				"          {450} as double,",
				"          {460} as double,",
				"          {470} as double,",
				"          {480} as double,",
				"          {490} as double,",
				"          {500} as double,",
				"          {510} as double,",
				"          {520} as double,",
				"          {530} as double,",
				"          {540} as double,",
				"          {550} as double,",
				"          {560} as double,",
				"          {570} as double,",
				"          {580} as double,",
				"          {590} as double,",
				"          {600} as double,",
				"          {610} as double,",
				"          {620} as double,",
				"          {630} as double,",
				"          {640} as double,",
				"          {650} as double,",
				"          {660} as double,",
				"          {670} as double,",
				"          {680} as double,",
				"          {690} as double,",
				"          {700} as double",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> SourceFileInCSV",
				"source(output(",
				"          ID as integer,",
				"          email as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          avatar as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceUserprofile",
				"SourceFileInCSV select(mapColumn(",
				"          COLOR_TOOL_Name = {Color Tool},",
				"          Color_Chip_Name = {Color Chip Name},",
				"          DateTime,",
				"          Color_Chip_Source = {Color Chip Source},",
				"          Scheme,",
				"          Instrument,",
				"          Geometry,",
				"          {400},",
				"          {410},",
				"          {420},",
				"          {430},",
				"          {440},",
				"          {450},",
				"          {460},",
				"          {470},",
				"          {480},",
				"          {490},",
				"          {500},",
				"          {510},",
				"          {520},",
				"          {530},",
				"          {540},",
				"          {550},",
				"          {560},",
				"          {570},",
				"          {580},",
				"          {590},",
				"          {600},",
				"          {610},",
				"          {620},",
				"          {630},",
				"          {640},",
				"          {650},",
				"          {660},",
				"          {670},",
				"          {680},",
				"          {690},",
				"          {700}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(ENTITY_ID = SinkEntityIDValue#output()) ~> derivedColumn1",
				"SourceUserprofile derive(ENTITY_ID = toInteger(ENTITY_ID)) ~> AddColumnsValueEntityID",
				"AddColumnsValueEntityID sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 0,",
				"     mapColumn(",
				"          ENTITY_ID",
				"     )) ~> SinkEntityIDValue",
				"derivedColumn1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Color_Chip_Name,",
				"          ENTITY_ID = ENTITY_ID.ENTITY_ID",
				"     ),",
				"     format: 'table') ~> sink1"
			]
		}
	}
}